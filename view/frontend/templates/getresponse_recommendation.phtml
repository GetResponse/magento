<div class="getresponse-recommendation-section" data-bind="scope: 'getresponse_recommendation_section'">
    <div id="getresponse-recommendation" data-bind="attr: {
        'getresponse-shop-id': getResponseRecommendation() && getResponseRecommendation().getResponseShopId,
        'product-id-added-to-wishlist': getResponseRecommendation() && getResponseRecommendation().productIdAddedToWishList,
        'product-id-removed-from-wishlist': getResponseRecommendation() &&  getResponseRecommendation().productIdRemovedFromWishList
    }"></div>
</div>

<script>
(function () {
    function waitUntilAvailable(variableName, callback, checkInterval = 50, timeout = 5000) {
        const start = Date.now();

        (function check() {
            if (typeof window[variableName] !== 'undefined') {
                callback(window[variableName]);
            } else if (Date.now() - start < timeout) {
                setTimeout(check, checkInterval);
            } else {
                console.error(variableName + ' did not become available in time.');
            }
        })();
    }

    function init(customerData) {
        const recommendationNode = document.getElementById('getresponse-recommendation');
        if (!recommendationNode) return;

        const sendTrackingEvent = (action, productId) => {
            GrTracking('importScript', 'ec');
            GrTracking(action, {
                shop: { id: recommendationNode.getAttribute('getresponse-shop-id') },
                product: { id: productId }
            });
            customerData.reload(['getresponse-recommendation']);
        };

        new MutationObserver(() => {
            const shopId = recommendationNode.getAttribute('getresponse-shop-id');
            if (!shopId) return;

            const productAdded = recommendationNode.getAttribute('product-id-added-to-wishlist');
            const productRemoved = recommendationNode.getAttribute('product-id-removed-from-wishlist');

            if (productAdded && !productRemoved) {
                sendTrackingEvent('likeItem', productAdded);
            } else if (productRemoved && !productAdded) {
                sendTrackingEvent('unlikeItem', productRemoved);
            }
        }).observe(recommendationNode, { attributes: true });
    }

    document.addEventListener('DOMContentLoaded', function () {
        waitUntilAvailable('customerData', init);
    });
})();
</script>

<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Ui/js/core/app": {
                "components": {
                    "getresponse_recommendation_section": {
                        "component": "GetResponse_GetResponseIntegration/js/getresponse_recommendation_section"
                    }
                }
            }
        }
    }
</script>
