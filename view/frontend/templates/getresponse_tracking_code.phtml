<div class="getresponse-tracking-code-section" data-bind="scope: 'getresponse_tracking_code_section'">
    <div id="customer-email-address" data-bind="attr: { 'customer-email': getResponseTrackingCode().customerEmail }"></div>
    <div id="tracking-code-cart" data-bind="attr: { 'cart': getResponseTrackingCode().cart }"></div>
</div>

<script>
    require([
        'Magento_Customer/js/customer-data',
        'jquery',
        'mage/cookies',
        'domReady!'
    ], function (customerData, $) {
        let cart = document.querySelector('#tracking-code-cart');

        let cartObserver = new MutationObserver(function(mutations) {
            let trackingCodeEnabled = typeof gaSetUserId !== 'undefined' && typeof gaSetUserId === 'function';

            mutations.forEach(function(mutation) {

                if (mutation.type === "attributes" && mutation.attributeName === 'cart') {
                    let cartData = JSON.parse(document.getElementById('tracking-code-cart').getAttribute('cart'));

                    if (cartData !== null && Object.keys(cartData).length > 0 && trackingCodeEnabled) {
                        GrTracking('importScript', 'ec');
                        GrTracking('cartUpdate', cartData);
                        customerData.reload(['getresponse-tracking-code']);
                    }
                }
            });
        });

        cartObserver.observe(cart, { attributes: true});

        let customerEmailNode = document.getElementById('customer-email-address');

        let customerEmailObserver = new MutationObserver(function(mutations) {
            let customerEmail = customerEmailNode.getAttribute('customer-email');
            let gaIsValuable = $.cookie('gaIsValuable');
            let trackingCodeEnabled = typeof gaSetUserId !== 'undefined' && typeof gaSetUserId === 'function';

            if (customerEmail !== null && trackingCodeEnabled && gaIsValuable !== '1') {
                gaSetUserId(customerEmail);
                GrTracking('setUserId', customerEmail);
            }
        });

        customerEmailObserver.observe(customerEmailNode, { attributes: true });

        window.addEventListener('load', function() {
            let trackingCodeEnabled = typeof gaSetUserId !== 'undefined' && typeof gaSetUserId === 'function';

            if (!trackingCodeEnabled) {
                return;
            }

            if (typeof GrViewCategoryItem !== 'undefined') {
                GrTracking('importScript', 'ec');
                GrTracking('viewCategory', GrViewCategoryItem);
            }

            if (typeof GrViewProductItem !== 'undefined') {
                GrTracking('importScript', 'ec');
                GrTracking('viewItem', GrViewProductItem);
            }

            if (typeof GrOrderPlaced !== 'undefined') {
                GrTracking('importScript', 'ec');
                GrTracking('orderPlaced', GrOrderPlaced);
            }
        });
    });
</script>

<script type="text/x-magento-init">
    {
        "*": {
            "Magento_Ui/js/core/app": {
                "components": {
                    "getresponse_tracking_code_section": {
                        "component": "GetResponse_GetResponseIntegration/js/getresponse_tracking_code_section"
                    }
                }
            }
        }
    }
</script>
