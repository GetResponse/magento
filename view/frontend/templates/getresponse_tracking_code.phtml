<div class="getresponse-tracking-code-section" data-bind="scope: 'getresponse_tracking_code_section'">
    <div id="customer-email-address" data-bind="attr: { 'customer-email': getResponseTrackingCode().customerEmail }"></div>
    <div id="tracking-code-cart" data-bind="attr: { 'cart': getResponseTrackingCode().cart }"></div>
</div>
<div class="getresponse-tracking-code-section" data-bind="scope: 'getresponse_tracking_code_section'"></div>

<script>
function calculateChecksum(cart) {
    const strData = JSON.stringify(cart);
    return strData.split('').reduce((acc, char) => acc + char.charCodeAt(0), 0);
}

function mapCart(cart) {
    if (!cart) return null;

    const cartUrl = window.checkoutConfig?.cartUrl;
    const currency = window.checkoutConfig?.totalsData?.base_currency_code;

    const price = parseFloat(cart.subtotalAmount);
    const products = (cart.items || []).map(item => {
        return {
        product: {
            id: item.product_id,
            name: item.product_name || item.name || '',
            price: item.product_price_value ? String(parseFloat(item.product_price_value)) : '0.00',
            sku: item.product_sku || '',
            vendor: item.vendor || '',
            currency
        },
        // categories: (item.categories || []).map(cat => ({
        //     id: cat.id || '',
        //     name: cat.name || ''
        // })),
        quantity: item.qty ? parseInt(item.qty, 10) : 1
        };
    });

    return {
        price,
        cartId: cart.cartId,
        currency,
        cartUrl,
        products
    };
}

let lastCustomerEmail = null

function onPrivateContentLoaded(sectionData) {
    console.log(sectionData)
    lastCustomerEmail = sectionData?.['getresponse-tracking-code']?.customerEmail ?? null;
    if (!sectionData?.cart) return;
    const cart = sectionData.cart;
    const currentChecksum = calculateChecksum(cart);
    const lastChecksum = parseInt(localStorage.getItem('grPayloadChecksum') || '');

    if (currentChecksum === lastChecksum) return;
    GrTracking('importScript', 'ec');
    console.log(mapCart(cart))
    GrTracking('cartUpdate', mapCart(cart));
    localStorage.setItem('grPayloadChecksum', currentChecksum.toString())
}

if (typeof window !== 'undefined') {
    window.addEventListener('private-content-loaded', (e) => onPrivateContentLoaded(e.detail?.data));
}

const getCookie = name => {
    const match = document.cookie.match(new RegExp(`(?:^|; )${name.replace(/([.$?*|{}()[\]\\/+^])/g, '\\$1')}=([^;]*)`));
    return match ? decodeURIComponent(match[1]) : null;
};

const isTrackingReady = () => typeof gaSetUserId === 'function';

window.addEventListener('load', async () => {
    const initTracking = () => {
        if (!isTrackingReady()) {
            setTimeout(initTracking, 500);
            return;
        }
        dispatchEvent(new Event('reload-customer-section-data'));

        const gaIsValuable = getCookie('gaIsValuable');
        console.log('[GetResponse] tracking ready. lastCustomerEmail:', lastCustomerEmail, 'gaIsValuable:', gaIsValuable);

        if (lastCustomerEmail && gaIsValuable !== '1') {
            gaSetUserId(lastCustomerEmail);
            GrTracking('setUserId', lastCustomerEmail);
            console.log('[GetResponse] setUserId sent:', lastCustomerEmail);
        }

        if (typeof GrViewCategoryItem !== 'undefined') {
            GrTracking('importScript', 'ec');
            GrTracking('viewCategory', GrViewCategoryItem);
            console.log('[GetResponse] viewCategory sent', GrViewCategoryItem);
        }

        if (typeof GrViewProductItem !== 'undefined') {
            GrTracking('importScript', 'ec');
            GrTracking('viewItem', GrViewProductItem);
            console.log('[GetResponse] viewItem sent', GrViewProductItem);
        }

        if (typeof GrOrderPlaced !== 'undefined') {
            GrTracking('importScript', 'ec');
            GrTracking('orderPlaced', GrOrderPlaced);
            console.log('[GetResponse] orderPlaced sent', GrOrderPlaced);
        }
    };

    initTracking();
});
</script>